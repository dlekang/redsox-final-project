-- MySQL Script generated by MySQL Workbench
-- Wed Nov  4 16:18:43 2015
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema redsox
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `redsox` ;

-- -----------------------------------------------------
-- Schema redsox
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `redsox` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `redsox` ;

-- -----------------------------------------------------
-- Table `redsox`.`Users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `redsox`.`Users` ;

CREATE TABLE IF NOT EXISTS `redsox`.`Users` (
  `userID` INT NOT NULL AUTO_INCREMENT,
  `fName` VARCHAR(45) NULL,
  `lName` VARCHAR(45) NULL,
  `userName` VARCHAR(45) NULL,
  PRIMARY KEY (`userID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `redsox`.`Messages`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `redsox`.`Messages` ;

CREATE TABLE IF NOT EXISTS `redsox`.`Messages` (
  `messageID` INT NOT NULL AUTO_INCREMENT,
  `userID` INT NULL,
  `postDate` DATETIME NULL,
  `topic` VARCHAR(45) NULL,
  `message` VARCHAR(300) NULL,
  PRIMARY KEY (`messageID`),
  INDEX `userids_idx` (`userID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `redsox`.`Ratings`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `redsox`.`Ratings` ;

CREATE TABLE IF NOT EXISTS `redsox`.`Ratings` (
  `ratingsID` INT NOT NULL AUTO_INCREMENT,
  `messageID` INT NULL,
  `rating` INT NULL,
  PRIMARY KEY (`ratingsID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `redsox`.`Replies`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `redsox`.`Replies` ;

CREATE TABLE IF NOT EXISTS `redsox`.`Replies` (
  `replyID` INT NOT NULL AUTO_INCREMENT,
  `messageID` INT NULL,
  `reply` VARCHAR(300) NULL,
  `userID` INT NULL,
  PRIMARY KEY (`replyID`),
  INDEX `repliesCon_idx` (`messageID` ASC),
  INDEX `userCon_idx` (`userID` ASC))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `redsox`.`Users`
-- -----------------------------------------------------
START TRANSACTION;
USE `redsox`;
INSERT INTO `redsox`.`Users` (`userID`, `fName`, `lName`, `userName`) VALUES (1, 'Jesse', 'Reckley', 'jereckley');
INSERT INTO `redsox`.`Users` (`userID`, `fName`, `lName`, `userName`) VALUES (2, 'Sandi', 'Dooley', 'sadooley');
INSERT INTO `redsox`.`Users` (`userID`, `fName`, `lName`, `userName`) VALUES (3, 'Frank', 'Sanot', 'minata');
INSERT INTO `redsox`.`Users` (`userID`, `fName`, `lName`, `userName`) VALUES (4, 'Santi', 'Clause', 'StNick');

COMMIT;


-- -----------------------------------------------------
-- Data for table `redsox`.`Messages`
-- -----------------------------------------------------
START TRANSACTION;
USE `redsox`;
INSERT INTO `redsox`.`Messages` (`messageID`, `userID`, `postDate`, `topic`, `message`) VALUES (1, 1, '2010-01-29 12:31:31', 'friends', 'It\'s so awesome that people think and consider others and stuff');
INSERT INTO `redsox`.`Messages` (`messageID`, `userID`, `postDate`, `topic`, `message`) VALUES (2, 3, '2011-01-15 12:31:31', 'tools', 'My Favorite tool is the hammer');
INSERT INTO `redsox`.`Messages` (`messageID`, `userID`, `postDate`, `topic`, `message`) VALUES (3, 2, '2013-01-15 12:31:31', 'years', 'The years just go by quick.');
INSERT INTO `redsox`.`Messages` (`messageID`, `userID`, `postDate`, `topic`, `message`) VALUES (4, 1, '2013-02-28 12:31:31', 'years forgotten', 'Average person lives 80 years?');

COMMIT;


-- -----------------------------------------------------
-- Data for table `redsox`.`Ratings`
-- -----------------------------------------------------
START TRANSACTION;
USE `redsox`;
INSERT INTO `redsox`.`Ratings` (`ratingsID`, `messageID`, `rating`) VALUES (1, 4, 2);
INSERT INTO `redsox`.`Ratings` (`ratingsID`, `messageID`, `rating`) VALUES (2, 4, 5);
INSERT INTO `redsox`.`Ratings` (`ratingsID`, `messageID`, `rating`) VALUES (3, 4, 4);
INSERT INTO `redsox`.`Ratings` (`ratingsID`, `messageID`, `rating`) VALUES (4, 1, 5);
INSERT INTO `redsox`.`Ratings` (`ratingsID`, `messageID`, `rating`) VALUES (5, 1, 4);
INSERT INTO `redsox`.`Ratings` (`ratingsID`, `messageID`, `rating`) VALUES (6, 1, 3);

COMMIT;


-- -----------------------------------------------------
-- Data for table `redsox`.`Replies`
-- -----------------------------------------------------
START TRANSACTION;
USE `redsox`;
INSERT INTO `redsox`.`Replies` (`replyID`, `messageID`, `reply`, `userID`) VALUES (1, 2, 'Was that serious?', 3);
INSERT INTO `redsox`.`Replies` (`replyID`, `messageID`, `reply`, `userID`) VALUES (2, 2, 'Yea I think it was.', 2);

COMMIT;

Create procedure messaging(currentUser int(11),dater datetime,addTopic varchar(45),addMessageBody varchar(300)) INSERT INTO `redsox`.`Messages` ( `userID`, `postDate`, `topic`, `message`) VALUES ( currentUser , dater , addTopic ,addMessageBody);

Create procedure replying(messageid int(11),thread varchar(300),currentUser int(11)) INSERT INTO `redsox`.`Replies` (`messageID`, `reply`, `userID`) VALUES (messageid,thread,currentUser);

Create procedure rating(topicName int(11),enterRating int(11)) INSERT INTO `redsox`.`Ratings` ( `messageID`, `rating`) VALUES (topicName , enterRating );

Create procedure avgRatings(topicName int(11)) SELECT avg(rating) as avgRating FROM Ratings where messageID = topicName;

Create procedure callReplies(repId int(11)) SELECT * FROM Replies join Users on Users.userID = Replies.userID where Replies.messageID = repId;

Create procedure byMessages() SELECT * FROM Messages join Users on Users.userID = Messages.userID order by topic;

Create procedure byUsers() SELECT * FROM Messages join Users on Users.userID = Messages.userID order by userName;

Create procedure byDate() SELECT * FROM Messages join Users on Users.userID = Messages.userID order by postDate;

Create procedure getUser(usersss varchar(45)) SELECT userID from Users where userName = usersss;

Create procedure addUser(fName varchar(45),lName varchar(45),userName varchar(45)) INSERT INTO `redsox`.`Users` (`fName`, `lName`, `userName`) VALUES (fName,lName,userName);